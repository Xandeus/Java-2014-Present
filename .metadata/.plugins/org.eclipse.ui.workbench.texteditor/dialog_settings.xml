<?xml version="1.0" encoding="UTF-8"?>
<section name="Workbench">
	<section name="org.eclipse.ui.texteditor.FindReplaceDialog">
		<item value="true" key="isRegEx"/>
		<item value="" key="selection"/>
		<item value="false" key="casesensitive"/>
		<item value="false" key="incremental"/>
		<item value="true" key="wrap"/>
		<item value="true" key="wholeword"/>
		<list key="findhistory">
			<item value="import java\.io\.BufferedReader;\Rimport java\.io\.File;\Rimport java\.io\.InputStreamReader;\Rimport java\.io\.OutputStreamWriter;\Rimport java\.net\.URI;\Rimport java\.net\.URL;\Rimport java\.net\.URLConnection;\Rimport java\.net\.URLEncoder;\Rimport java\.nio\.file\.Paths;\R\Rpublic class BrowserTest \{\R\tpublic static void main\(String\[\] args\) throws Exception \{\R\t\tURI oracle = new URI\(&quot;file:///C:/Users/Alex/Documents/TestWebsite\.html&quot;\);\R\t\tURLConnection yc = oracle\.toURL\(\)\.openConnection\(\);\R\t\tBufferedReader in = new BufferedReader\(new InputStreamReader\(yc\.getInputStream\(\)\)\);\R\t\tString inputLine;\R\t\tif \(args\.length != 2\) \{\R            System\.err\.println\(&quot;Usage:  java Reverse &quot;\R                \+ &quot;http://&lt;location of your servlet/script&gt;&quot;\R                \+ &quot; string_to_reverse&quot;\);\R            System\.exit\(1\);\R        \}\R\R        String stringToReverse = URLEncoder\.encode\(args\[1\], &quot;UTF-8&quot;\);\R\R        URL url = new URL\(args\[0\]\);\R        URLConnection connection = url\.openConnection\(\);\R        connection\.setDoOutput\(true\);\R\R        OutputStreamWriter out = new OutputStreamWriter\(\R                                         connection\.getOutputStream\(\)\);\R        out\.write\(&quot;string=&quot; \+ stringToReverse\);\R        out\.close\(\);\R\R        BufferedReader ins = new BufferedReader\(\R                                    new InputStreamReader\(\R                                    connection\.getInputStream\(\)\)\);\R        String decodedString;\R        while \(\(decodedString = in\.readLine\(\)\) != null\) \{\R            System\.out\.println\(decodedString\);\R        \}\R        in\.close\(\);\R    \}\R\t\}\R\}\R"/>
			<item value="frequency"/>
			<item value="frequenct"/>
			<item value="gameOver"/>
			<item value="findValidAttacks"/>
			<item value="package markovChains;\R\Rimport java\.io\.BufferedReader;\Rimport java\.io\.File;\Rimport java\.io\.IOException;\Rimport java\.io\.InputStreamReader;\Rimport java\.util\.Hashtable;\Rimport java\.util\.Random;\Rimport java\.util\.Scanner;\Rimport java\.util\.Vector;\R\R\Rpublic class Example \{\R\R\t// Hashmap\R\tpublic static Hashtable&lt;String, Vector&lt;String&gt;&gt; markovChain = new Hashtable&lt;String, Vector&lt;String&gt;&gt;\(\);\R\tstatic Random rnd = new Random\(\);\R\t\R\t\R\t/\*\R\t \* Main constructor\R\t \*/\R\tpublic static void main\(String\[\] args\) throws IOException \{\R\t\t\R\t\t// Create the first two entries \(k:_start, k:_end\)\R\t\tmarkovChain\.put\(&quot;_start&quot;, new Vector&lt;String&gt;\(\)\);\R\t\tmarkovChain\.put\(&quot;_end&quot;, new Vector&lt;String&gt;\(\)\);\R\t\tFile file = new File\(&quot;res/OrangeAndGreen&quot;\);\R\t\tScanner scan = new Scanner\(file\);\R\t\t// Get some words \R\t\tSystem\.out\.print\(&quot;Enter your phrase &gt; &quot;\);\R\t\tBufferedReader in = new BufferedReader\(new InputStreamReader\(System\.in\)\);\R\t\tString sInput = in\.readLine\(\) \+ &quot;\.&quot;;\R\t\t\R\t\t// Add the words to the hash table\R\t\taddWords\(sInput\);\R\t\R\t\t\R\t\}\R\t\R\t/\*\R\t \* Add words\R\t \*/\R\tpublic static void addWords\(String phrase\) \{\R\t\t// put each word into an array\R\t\tString\[\] words = phrase\.split\(&quot; &quot;\);\R\t\t\t\t\R\t\t// Loop through each word, check if it&apos;s already added\R\t\t// if its added, then get the suffix vector and add the word\R\t\t// if it hasn&apos;t been added then add the word to the list\R\t\t// if its the first or last word then select the _start / _end key\R\t\t\R\t\tfor \(int i=0; i&lt;words\.length; i\+\+\) \{\R\t\t\t\t\t\t\R\t\t\t// Add the start and end words to their own\R\t\t\tif \(i == 0\) \{\R\t\t\t\tVector&lt;String&gt; startWords = markovChain\.get\(&quot;_start&quot;\);\R\t\t\t\tstartWords\.add\(words\[i\]\);\R\t\t\t\t\R\t\t\t\tVector&lt;String&gt; suffix = markovChain\.get\(words\[i\]\);\R\t\t\t\tif \(suffix == null\) \{\R\t\t\t\t\tsuffix = new Vector&lt;String&gt;\(\);\R\t\t\t\t\tsuffix\.add\(words\[i\+1\]\);\R\t\t\t\t\tmarkovChain\.put\(words\[i\], suffix\);\R\t\t\t\t\}\R\t\t\t\t\R\t\t\t\} else if \(i == words\.length-1\) \{\R\t\t\t\tVector&lt;String&gt; endWords = markovChain\.get\(&quot;_end&quot;\);\R\t\t\t\tendWords\.add\(words\[i\]\);\R\t\t\t\t\R\t\t\t\} else \{\t\R\t\t\t\tVector&lt;String&gt; suffix = markovChain\.get\(words\[i\]\);\R\t\t\t\tif \(suffix == null\) \{\R\t\t\t\t\tsuffix = new Vector&lt;String&gt;\(\);\R\t\t\t\t\tsuffix\.add\(words\[i\+1\]\);\R\t\t\t\t\tmarkovChain\.put\(words\[i\], suffix\);\R\t\t\t\t\} else \{\R\t\t\t\t\tsuffix\.add\(words\[i\+1\]\);\R\t\t\t\t\tmarkovChain\.put\(words\[i\], suffix\);\R\t\t\t\t\}\R\t\t\t\}\R\t\t\}\t\t\R\t\tgenerateSentence\(\);\R\t\}\R\t\R\t\R\t/\*\R\t \* Generate a markov phrase\R\t \*/\R\tpublic static void generateSentence\(\) \{\R\t\t\R\t\t// Vector to hold the phrase\R\t\tVector&lt;String&gt; newPhrase = new Vector&lt;String&gt;\(\);\R\t\t\R\t\t// String for the next word\R\t\tString nextWord = &quot;&quot;;\R\t\t\t\t\R\t\t// Select the first word\R\t\tVector&lt;String&gt; startWords = markovChain\.get\(&quot;_start&quot;\);\R\t\tint startWordsLen = startWords\.size\(\);\R\t\tnextWord = startWords\.get\(rnd\.nextInt\(startWordsLen\)\);\R\t\tnewPhrase\.add\(nextWord\);\R\t\t\R\t\t// Keep looping through the words until we&apos;ve reached the end\R\t\twhile \(nextWord\.charAt\(nextWord\.length\(\)-1\) != &apos;\.&apos;\) \{\R\t\t\tVector&lt;String&gt; wordSelection = markovChain\.get\(nextWord\);\R\t\t\tint wordSelectionLen = wordSelection\.size\(\);\R\t\t\tnextWord = wordSelection\.get\(rnd\.nextInt\(wordSelectionLen\)\);\R\t\t\tnewPhrase\.add\(nextWord\);\R\t\t\}\R\t\t\R\t\tSystem\.out\.println\(&quot;New phrase: &quot; \+ newPhrase\.toString\(\)\);\t\R\t\}\R\}\R"/>
			<item value=" "/>
			<item value="showMessage"/>
		</list>
		<list key="replacehistory">
			<item value="System.out.println"/>
		</list>
	</section>
	<section name="org.eclipse.ui.texteditor.FindReplaceDialog_dialogBounds">
		<item value="305" key="DIALOG_WIDTH"/>
		<item value="1|Segoe UI|9.0|0|WINDOWS|1|-15|0|0|0|400|0|0|0|1|0|0|0|0|Segoe UI" key="DIALOG_FONT_NAME"/>
		<item value="442" key="DIALOG_HEIGHT"/>
		<item value="1006" key="DIALOG_X_ORIGIN"/>
		<item value="148" key="DIALOG_Y_ORIGIN"/>
	</section>
</section>
